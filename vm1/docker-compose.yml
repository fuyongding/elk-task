version: '3'
services:
  setup:
      image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
      volumes:
        - ./certs:/usr/share/elasticsearch/config/certs
      user: "0"
      command: >
        bash -c '
          if [ x${ELASTIC_PASSWORD} == x ]; then
            echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
            exit 1;
          elif [ x${KIBANA_PASSWORD} == x ]; then
            echo "Set the KIBANA_PASSWORD environment variable in the .env file";
            exit 1;
          fi;
          if [ ! -f config/certs/ca.zip ]; then
            echo "Creating CA";
            bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
            unzip config/certs/ca.zip -d config/certs;
          fi;
          if [ ! -f config/certs/certs.zip ]; then
            echo "Creating certs";
            echo -ne \
            "instances:\n"\
            "  - name: master-node-1\n"\
            "    dns:\n"\
            "      - master-node-1\n"\
            "      - ${VM_ONE_IP}\n"\
            "    ip:\n"\
            "      - ${VM_ONE_IP}\n"\
            "  - name: http-node-1\n"\
            "    dns:\n"\
            "      - http-node-1\n"\
            "      - ${VM_ONE_IP}\n"\
            "    ip:\n"\
            "      - ${VM_ONE_IP}\n"\
            "  - name: data-node-1\n"\
            "    dns:\n"\
            "      - data-node-1\n"\
            "      - ${VM_ONE_IP}\n"\
            "    ip:\n"\
            "      - ${VM_ONE_IP}\n"\
            "  - name: data-node-2\n"\
            "    dns:\n"\
            "      - data-node-2\n"\
            "      - ${VM_ONE_IP}\n"\
            "    ip:\n"\
            "      - ${VM_ONE_IP}\n"\
            > config/certs/instances.yml;
            bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
            unzip config/certs/certs.zip -d config/certs;
          fi;
          echo "Setting file permissions"
          chown -R root:root config/certs;
          find . -type d -exec chmod 750 \{\} \;;
          find . -type f -exec chmod 640 \{\} \;;
          echo "Waiting for Elasticsearch availability";
          until curl -s --cacert config/certs/ca/ca.crt https://http-node-1:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
          echo "Setting kibana_system password";
          until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" https://http-node-1:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
          echo "All done!";
        '
      healthcheck:
        test: ["CMD-SHELL", "[ -f config/certs/master-node-1/master-node-1.crt ]"]
        interval: 1s
        timeout: 5s
        retries: 120

  master-node-1:
    depends_on:
        setup:
          condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./master_1:/var/lib/elasticsearch/data
    container_name: master-node-1
    environment:
      - node.name=master-node-1
      - node.roles=[master]
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=master-node-1
      - discovery.seed_hosts=${VM_ONE_IP}:9300,172.24.112.36:9300,172.24.115.94:9300
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/master-node-1/master-node-1.key
      - xpack.security.http.ssl.certificate=certs/master-node-1/master-node-1.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/master-node-1/master-node-1.key
      - xpack.security.transport.ssl.certificate=certs/master-node-1/master-node-1.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      - http.port=9200
      - transport.port=9300
      - network.publish_host=${VM_ONE_IP}
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://${VM_ONE_IP}:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  http-node-1:
    depends_on:
        - master-node-1
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./client_1:/var/lib/elasticsearch/data
    container_name: http-node-1
    environment:
      - node.name=http-node-1
      - node.roles=[ ]
      - cluster.initial_master_nodes=master-node-1
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=${VM_ONE_IP}:9300,172.24.112.36:9300,172.24.115.94:9300
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/http-node-1/http-node-1.key
      - xpack.security.http.ssl.certificate=certs/http-node-1/http-node-1.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/http-node-1/http-node-1.key
      - xpack.security.transport.ssl.certificate=certs/http-node-1/http-node-1.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      - http.port=9201
      - transport.port=9301
      - network.publish_host=${VM_ONE_IP}
    ports:
      - "9201:9201"
      - "9301:9301"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://${VM_ONE_IP}:9201 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  data-node-1:
    depends_on:
          - http-node-1
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./data_1:/var/lib/elasticsearch/data
    container_name: data-node-1
    environment:
      - node.name=data-node-1
      - node.roles=[ data ]
      - cluster.initial_master_nodes=master-node-1
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=${VM_ONE_IP}:9300,172.24.112.36:9300,172.24.115.94:9300
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/data_node_1/data_node_1.key
      - xpack.security.http.ssl.certificate=certs/data_node_1/data_node_1.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/data_node_1/data_node_1.key
      - xpack.security.transport.ssl.certificate=certs/data_node_1/data_node_1.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      - http.port=9202
      - transport.port=9302
      - network.publish_host=${VM_ONE_IP}
    ports:
      - "9202:9202"
      - "9302:9302"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://${VM_ONE_IP}:9202 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  data-node-2:
    depends_on:
            - data-node-1
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - ./certs:/usr/share/elasticsearch/config/certs
      - ./data_2:/var/lib/elasticsearch/data
    container_name: data-node-2
    environment:
      - node.name=data-node-2
      - node.roles=[ data ]
      - cluster.initial_master_nodes=master-node-1
      - cluster.name=${CLUSTER_NAME}
      - discovery.seed_hosts=172.24.123.135:9300,172.24.112.36:9300,172.24.115.94:9300
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/data_node_2/data_node_2.key
      - xpack.security.http.ssl.certificate=certs/data_node_2/data_node_2.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/data_node_2/data_node_2.key
      - xpack.security.transport.ssl.certificate=certs/data_node_2/data_node_2.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      - http.port=9203
      - transport.port=9303
      - network.publish_host=172.24.123.135
    ports:
      - "9203:9203"
      - "9303:9303"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://${VM_ONE_IP}:9203 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
  
