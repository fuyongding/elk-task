version: '3'
services:
  create_certs:
    container_name: create_certs
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    command: >
      bash -c '
        if [ ! -f config/certs/ca.zip ]; then
            echo "Creating CA";
            bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
            unzip config/certs/ca.zip -d config/certs;
        fi;
        if [[ ! -f config/certs/bundle.zip ]]; then
          echo -ne \
          "instances:\n"\
          "  - name: master-node-1\n"\
          "    dns:\n"\
          "      - master-node-1\n"\
          "    ip:\n"\
          "      - ${VM_ONE_IP}\n"\
          "  - name: http-node-1\n"\
          "    dns:\n"\
          "      - http-node-1\n"\
          "    ip:\n"\
          "      - ${VM_ONE_IP}\n"\
          "  - name: data-node-1\n"\
          "    dns:\n"\
          "      - data-node-1\n"\
          "    ip:\n"\
          "      - ${VM_ONE_IP}\n"\
          "  - name: data-node-2\n"\
          "    dns:\n"\
          "      - data-node-2\n"\
          "    ip:\n"\
          "      - ${VM_ONE_IP}\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem --in config/certs/instances.yml -out config/certs/bundle.zip;
          unzip config/certs/bundle.zip -d config/certs; 
        fi;
        chown -R 1000:0 config/certs
      '
    user: "0"
    volumes: 
      - ./certs:/usr/share/elasticsearch/config/certs